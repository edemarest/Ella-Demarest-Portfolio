[
  {
    "id": 1,
    "title": "Pok\u00e9mon Sleep Research Community",
    "subheading": "A privacy-focused community for Pok\u00e9mon Sleep players. Features include friend code sharing, discussion posts, and tag-based filtering. Built with React and Firebase for secure and scalable functionality.",
    "image": "/assets/images/psc.png",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>A community forum and friend code-sharing site for Pok\u00e9mon Sleep players. Built with React and Firebase, the platform offers privacy-aware code sharing, discussion posts, and a tag-based filtering system. Users can share entries, earn reputation, and connect with others while protecting their codes from spammers.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Developed secure authentication and Firestore rules for privacy-preserving features.</li><li>Created a flexible, scalable data structure for storing posts and user activity.</li><li>Implemented a dynamic masonry layout and profanity filter to maintain quality user contributions.</li></ul></div>",
    "link": "https://pokemon-sleep-research-community.com",
    "media": [
      {
        "type": "image",
        "fileSrc": "/assets/images/psc2.png"
      },
      {
        "type": "image",
        "fileSrc": "/assets/images/psc3.png"
      }
    ],
    "tags": [
      "Firebase",
      "React"
    ]
  },
  {
    "id": 2,
    "title": "Phas Evidence Tracker",
    "subheading": "A collaborative evidence tracking tool for Phasmophobia players. Features real-time session sharing, Discord integration, and ghost identification assistance.",
    "image": "/assets/images/phas-journal-cover.gif",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>A real-time collaborative evidence tracker for Phasmophobia ghost hunting sessions. Teams can use the <a href=\"https://discord.com/oauth2/authorize?client_id=1393993800988491776\" target=\"_blank\" style=\"color:#3b82f6;text-decoration:underline;\">Discord Activity version</a> to create and join investigation lobbies directly inside Discord. Track discovered evidence, eliminate ghost types, and coordinate findings in real time. <a href=\"https://github.com/edemarest/phas-evidence-tracker\" target=\"_blank\" style=\"color:#3b82f6;text-decoration:underline;\">Source code on GitHub</a>.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Built real-time synchronization using WebSocket connections to ensure all players see evidence updates instantly.</li><li>Implemented Discord Embedded App SDK integration for seamless auto-session creation within Discord activities.</li><li>Designed robust session management with participant tracking, evidence state synchronization, and ghost elimination logic.</li></ul></div>",
    "link": "https://discord.com/oauth2/authorize?client_id=1393993800988491776",
    "media": [
      {
        "type": "youtube",
        "id": "Ia5rDEf-x7s"
      }
    ],
    "tags": [
      "React",
      "Node.js",
      "Express",
      "WebSocket",
      "Discord SDK"
    ]
  },
  {
    "id": 3,
    "title": "HuskyFlow (Enhanced)",
    "subheading": "A Stack Overflow clone with daily puzzles and messaging. Built with the MERN stack, it includes authentication, leaderboards, and puzzle challenges. Focused on modular architecture and secure backend design.",
    "image": "/assets/images/swe_2.png",
    "description1": "\n    <div class=\"project-description\"><p><strong>Description</strong></p>\n    <p>This class project reimagines a bare-bones Stack Overflow clone with major feature upgrades. Built with the MERN stack, HuskyFlow introduces user authentication, direct messaging, and daily puzzle challenges modeled after games like NYT\u2019s Sudoku and LinkedIn\u2019s logic puzzles. I contributed most to the system architecture for the puzzle schemas, leaderboard model, and backend API design.</p>\n    </div>\n    ",
    "description2": "\n    <div class=\"project-description\"><p><strong>Challenges</strong></p>\n    <ul>\n    <li>Designed daily puzzle schema, including CodeNumbers and TruthTable logic puzzle formats.</li>\n    <li>Created secure submission logic, leaderboard tracking, and one-attempt-per-day constraints.</li>\n    <li>Collaborated in a team to modularize a complex full-stack codebase while integrating new features.</li>\n    </ul></div>\n    ",
    "link": "https://fake-so-client-418.onrender.com",
    "media": [
      { "type": "image", "fileSrc": "/assets/images/swe_1.png" },
      { "type": "image", "fileSrc": "/assets/images/swe_2.png" }
    ],
    "tags": [
      "Express",
      "MongoDB",
      "Node.js",
      "React"
    ]
  },
  {
    "id": 4,
    "title": "RNA Analysis Tool",
    "subheading": "A bioinformatics platform for RNA sequence analysis. Users can upload FASTA files, perform motif searches, and visualize results. Built with Flask APIs and React for interactive data visualization.",
    "image": "/assets/images/rna-tool-2.png",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>An RNA sequence analysis platform that allows users to upload FASTA files and perform various structural and predictive analyses. It supports motif search, RNA folding stability, and splice site prediction, and outputs results via interactive graphs and data tables. The backend uses Flask APIs with Python libraries like SciPy and BioPython, while the frontend is built with React and Tailwind.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Designed robust backend routes to handle multiple sequence types.</li><li>Integrated real-world bioinformatics libraries with performant state handling in React.</li><li>Planned scalability to support long sequences and batch submissions.</li></ul></div>",
    "link": "https://github.com/edemarest/rna-analysis-tool",
    "media": [
      {
        "type": "image",
        "fileSrc": "/assets/images/rna-tool-1.png"
      },
      {
        "type": "image",
        "fileSrc": "/assets/images/rna-tool-2.png"
      }
    ],
    "tags": [
      "Flask",
      "Python",
      "React"
    ]
  },
  {
    "id": 5,
    "title": "Power Rock App",
    "subheading": "A music-themed fitness app for fans and artists. Users complete workouts and earn rewards, while artists create branded exercises. Features dual user roles and real-time state updates.",
    "image": "/assets/images/power-rock.png",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>A music-themed fitness app connecting fans with artist-created workouts. Users can select favorite genres, complete guided workouts, and earn rewards. Artists can create their own branded exercises, and the dual user role structure supports tailored onboarding flows and content control.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Designed scalable logic for managing two user types with separate privileges.</li><li>Handled real-time state updates during workout completion flows.</li><li>Maintained a consistent visual and UX style across both fan and artist journeys.</li></ul></div>",
    "link": "https://github.com/edemarest/Power-Rock-App",
    "media": [
      {
        "type": "youtube",
        "id": "U-qfejJFTfM"
      },
      {
        "type": "slides",
        "id": "194_5LoCfFsi7GLSna5Aaqp1MH_6LsLken8RVnQssJOw"
      }
    ],
    "tags": [
      "React"
    ]
  },
  {
    "id": 6,
    "title": "Kambaz",
    "subheading": "A learning management system inspired by Canvas. Supports course creation, user roles, and a full quiz engine. Built with React, Node.js, and MongoDB for robust functionality.",
    "image": "/assets/images/kambaz_preview.png",
    "description1": "\n    <div class=\"project-description\"><p><strong>Description</strong></p>\n    <p>Kambaz is a full-featured learning management system built from scratch as a class project modeled after Canvas. The app supports course creation, user enrollment, module tracking, and full CRUD functionality across content. As a final extension, I built a comprehensive quiz/exam engine that supports multiple question types, submission tracking, and publishing options for faculty.</p>\n    </div>\n    ",
    "description2": "\n    <div class=\"project-description\"><p><strong>Challenges</strong></p>\n    <ul>\n    <li>Integrated quizzes into existing data model with RESTful API endpoints.</li>\n    <li>Implemented permissions and views for both student and faculty workflows.</li>\n    <li>Utilized Redux for state management and ensured backend validation of user input and submission logic.</li>\n    </ul></div>\n    ",
    "media": [
      { "type": "image", "fileSrc": "/assets/images/kambaz_1.png" },
      { "type": "image", "fileSrc": "/assets/images/kambaz_2.png" }
    ],
    "tags": [
      "Express",
      "JavaScript",
      "MongoDB",
      "Node.js",
      "React"
    ]
  },
  {
    "id": 7,
    "title": "Robux Calculator",
    "subheading": "A tool for Roblox developers to calculate earnings and fees. Converts Robux to local currencies with tax and discount options. Designed for clarity and ease of use.",
    "image": "/assets/images/robux_calculator.png",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>This tool helps developers calculate Robux earnings, DevEx values, and marketplace fees. It converts between Robux and local currencies, applying taxes and discounts. Useful for game creators managing monetization on Roblox.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Implemented non-linear pricing logic with dynamic tax inputs.</li><li>Designed currency scaling and display formatting for clarity.</li><li>Integrated play tester feedback to add optional tax removal tools.</li></ul></div>",
    "link": "https://www.roblox.com/games/13685362163/Robux-Computer",
    "media": [
      {
        "type": "youtube",
        "id": "BUmp30WhXAQ"
      }
    ],
    "tags": [
      "React"
    ]
  },
  {
    "id": 8,
    "title": "Bloxle",
    "subheading": "An endless Wordle-style game built in Roblox Studio. Features real-time word validation and custom UI. Designed for continuous play without daily limits.",
    "image": "/assets/images/bloxle.png",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>A never-ending Wordle-style game made in Roblox Studio. Bloxle features a custom wooden UI, row-based guessing logic, and an API for real-time word validation. Designed for endless play without the 1-word-a-day limit.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Built dynamic UI elements and validated API guesses in real-time.</li><li>Matched Wordle\u2019s interaction flow using row constraints and error messages.</li><li>Styled UI with a custom wood-grain look for unique branding.</li></ul></div>",
    "link": "https://www.youtube.com/watch?v=_1k-i0bezEs",
    "media": [
      {
        "type": "youtube",
        "id": "_1k-i0bezEs?si=IE99k5FS36lRjFY3"
      }
    ],
    "tags": []
  },
  {
    "id": 9,
    "title": "Flood Minigame",
    "subheading": "A Lua-based puzzle game to fill the board with one color. Features dynamic difficulty scaling and real-time leaderboards. Built with efficient flood-fill logic.",
    "image": "/assets/images/flood.png",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>Flood is a Lua-based puzzle game where players aim to match the entire board to one color in limited turns. The board grows in complexity and has customizable difficulty. Built with a color fill algorithm and real-time leaderboards.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Created efficient flood-fill logic and prevented infinite loops.</li><li>Balanced board generation with dynamic difficulty scaling.</li><li>Built backend leaderboard functionality using Roblox datastores.</li></ul></div>",
    "link": "https://www.roblox.com/games/12921382755/FLOOD-Beta",
    "media": [
      {
        "type": "youtube",
        "id": "your_youtube_id_here"
      }
    ],
    "tags": []
  },
  {
    "id": 10,
    "title": "Maze Game",
    "subheading": "A maze-generation and solving game using Prim's algorithm. Includes BFS/DFS visualization and interactive controls. Designed for educational purposes to explore algorithm tradeoffs.",
    "image": "/assets/images/maze.png",
    "description1": "<div class=\"project-description\"><p><strong>Description</strong></p><p>A pathfinding and maze-generation game using Prim\u2019s algorithm and interactive controls. Users can navigate mazes using keyboard input and view optimal solutions through BFS and DFS toggles. Designed as a tool to visualize algorithm tradeoffs.</p></div>",
    "description2": "<div class=\"project-description\"><p><strong>Challenges</strong></p><ul><li>Implemented Prim\u2019s algorithm for viable maze generation.</li><li>Integrated animation states for search algorithms in real-time.</li><li>Balanced visual clarity with technical depth for educational value.</li></ul></div>",
    "link": "",
    "media": [
      {
        "type": "image",
        "fileSrc": "/assets/maze.png"
      }
    ],
    "tags": ["Java"]
  }
]
